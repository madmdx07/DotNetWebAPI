﻿@model DotNetWebAPI.Models.StudentViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm("Create", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>StudentModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegisteredDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegisteredDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassId, "ClassList", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, new SelectList(Model.ClassList, "Id", "Value"), "Select Class", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hobbyModel, "Hobbies:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (var i = 0; i < Model.hobbyModel.Count(); i++)
                {
                    <table>
                        <tr>
                            <td>
                                @Html.HiddenFor(it => it.hobbyModel[i].HobbyId)
                                @Html.HiddenFor(it => it.hobbyModel[i].HobbyName)
                                @Html.DisplayFor(it => it.hobbyModel[i].HobbyName)
                            </td>
                            <td>
                                @Html.CheckBoxFor(it => it.hobbyModel[i].IsActive, new { Style = "vertical-align:3px}" })
                            </td>
                        </tr>
                    </table>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenderId, "GenderList", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.GenderList)
                {
                    @Html.RadioButtonFor(model => model.GenderId, item.Id, new { @class = "form-check-input" }) @item.Value
                }

                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ImagePath, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" accept=".jpg, .jpeg, .png, .gif" multiple required>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Docs, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="DocFile" accept=".pdf" multiple required>
            </div>

        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>